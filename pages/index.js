import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import { createApi } from 'unsplash-js';
import { useState } from 'react';
import apiExample from '../api-response-example.json';

const Photo = ({ photo }) => {
  const { user, urls, likes, exif } = photo

  return (
    <div className={styles.card}>
      <a href={urls.regular}>
        <Image className={styles.image} src={urls.regular} width={280} height={250} layout="responsive" />
      </a>

      <div className={styles.userContainer}>
        <a className={styles.userName} target="_blank" href={`https://unsplash.com/@${user.username}`}>{user.name}</a>
      </div>

      <div className={styles.infoContainer}>
        <p>{likes} Likes</p>
        <p>{exif.make} - {exif.model}</p>
      </div>
    </div>
  )
}

export default function Home() {
  const [accessKey, setAccessKey] = useState('');
  const [photoCount, setPhotoCount] = useState(20)
  const [apiResponse, setApiResponse] = useState(apiExample)

  function refreshPhotos() {
    const api = createApi({
      accessKey: accessKey
    });

    api.photos
      .getRandom({ count: photoCount })
      .then(result => {
        if (result.status === 200) {
          setApiResponse(result.response)
        } else {
          alert('Invalid request to Unsplash API')
        }
      })
      .catch(() => {
        console.log('Something went wrong!');
      })
  }

  return (
    <>
      <Head>
        <title>NextJS Polaroid Photos</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className={styles.controlContainer}>
        <div className={styles.inputContainer}>
          <input type="text" placeholder="Input Unsplash Access Key" value={accessKey} onChange={(e) => setAccessKey(e.target.value)} />
          <input type="number" placeholder="#" value={photoCount} onChange={(e) => setPhotoCount(e.target.value)} />
        </div>
        {/* {photoCount > 30 ? (<span>30 photos will be retrieved</span>) : null} */}
        <button onClick={refreshPhotos}>Refresh</button>
      </div>

      <div className={styles.cardsContainer}>
        {apiResponse.map(photo => (
          <Photo key={photo.id} photo={photo} />
        ))}
      </div>
    </>
  )
}
